(begin-tx)

(interface ifaceA
  (defun opA1:bool (s:string))

  )


(module implA G
  (defcap G () true)
  (implements ifaceA)
  (defun opA1:bool (s:string) true)
  )

(define-namespace 'ns (sig-keyset) (sig-keyset))

(namespace 'ns)

(interface ifaceB
  (defun opB1:integer (s:string))

  )



(module implAB G
  (defcap G () true)
  (implements ifaceA)
  (implements ifaceB)
  (defun opA1:bool (s:string) false)
  (defun opB1:integer (s:string) 0)
  )

(commit-tx)

(begin-tx)

(module test G
  (defcap G () true)
  (defun testAImpl (aImpl:module{ifaceA})
    (aImpl::opA1 "hi")
    )

  (defun callTestAImpl ()
    [(testAImpl ns.implAB)
     (testAImpl implA)
     ]
    )
  )

(commit-tx)
(begin-tx)

(namespace 'ns)

(module test2 G
  (defcap G () true)

  (defun callTestAImpl ()
    (let
      ((a (test.testAImpl implA))
       (b (test.testAImpl implAB)))

      [a b]
    )
  )
  )

(commit-tx)
(begin-tx)

(expect "bare modref resolution succeeds"
        true (test.testAImpl implA))
(expect "namespaced modref resolution succeeds"
        false (test.testAImpl ns.implAB))
(expect "in-module modref call succeeds"
        [false,true] (test.callTestAImpl))
(expect "in-module qual dynamic, implicit modref ns call succeeds"
        [true,false] (ns.test2.callTestAImpl))
