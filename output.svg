<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>Pact.Compile.app (1 samples, 0.10%)</title><rect x="666.1" y="133" width="1.2" height="15.0" fill="rgb(227,228,1)" rx="2" ry="2" />
<text  x="669.08" y="143.5" ></text>
</g>
<g >
<title>UNKNOWN (87 samples, 8.70%)</title><rect x="1087.3" y="485" width="102.7" height="15.0" fill="rgb(240,225,5)" rx="2" ry="2" />
<text  x="1090.34" y="495.5" >UNKNOWN</text>
</g>
<g >
<title>Data.ByteString.Base16.decode (9 samples, 0.90%)</title><rect x="256.6" y="277" width="10.6" height="15.0" fill="rgb(240,29,40)" rx="2" ry="2" />
<text  x="259.62" y="287.5" ></text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Internal.alterAnnotations (2 samples, 0.20%)</title><rect x="792.3" y="149" width="2.4" height="15.0" fill="rgb(222,186,2)" rx="2" ry="2" />
<text  x="795.34" y="159.5" ></text>
</g>
<g >
<title>Control.Monad.Catch.handleAll (3 samples, 0.30%)</title><rect x="607.1" y="245" width="3.5" height="15.0" fill="rgb(215,81,52)" rx="2" ry="2" />
<text  x="610.08" y="255.5" ></text>
</g>
<g >
<title>Pact.Interpreter.evalExec (1 samples, 0.10%)</title><rect x="10.0" y="453" width="1.2" height="15.0" fill="rgb(216,186,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>Statistics.Matrix.unsafeIndex (2 samples, 0.20%)</title><rect x="38.3" y="197" width="2.4" height="15.0" fill="rgb(233,32,54)" rx="2" ry="2" />
<text  x="41.32" y="207.5" ></text>
</g>
<g >
<title>Statistics.Regression.ols (11 samples, 1.10%)</title><rect x="21.8" y="213" width="13.0" height="15.0" fill="rgb(207,167,4)" rx="2" ry="2" />
<text  x="24.80" y="223.5" ></text>
</g>
<g >
<title>Pact.Types.RPC.parseJSON (2 samples, 0.20%)</title><rect x="253.1" y="213" width="2.3" height="15.0" fill="rgb(244,165,34)" rx="2" ry="2" />
<text  x="256.08" y="223.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.array_' (8 samples, 0.80%)</title><rect x="676.7" y="101" width="9.4" height="15.0" fill="rgb(205,121,42)" rx="2" ry="2" />
<text  x="679.70" y="111.5" ></text>
</g>
<g >
<title>Pact.Parse.parseExprs (54 samples, 5.40%)</title><rect x="515.0" y="277" width="63.8" height="15.0" fill="rgb(217,203,25)" rx="2" ry="2" />
<text  x="518.04" y="287.5" >Pact.Pa..</text>
</g>
<g >
<title>Text.Parser.Token._styleLetter (1 samples, 0.10%)</title><rect x="536.3" y="149" width="1.2" height="15.0" fill="rgb(234,168,40)" rx="2" ry="2" />
<text  x="539.28" y="159.5" ></text>
</g>
<g >
<title>Pact.Native.Internal.defNative (25 samples, 2.50%)</title><rect x="622.4" y="197" width="29.5" height="15.0" fill="rgb(220,210,31)" rx="2" ry="2" />
<text  x="625.42" y="207.5" >Pa..</text>
</g>
<g >
<title>Pact.Types.Orphans.position (27 samples, 2.70%)</title><rect x="954.0" y="213" width="31.9" height="15.0" fill="rgb(244,129,0)" rx="2" ry="2" />
<text  x="957.00" y="223.5" >Pa..</text>
</g>
<g >
<title>Control.Monad.Catch.handleAll (19 samples, 1.90%)</title><rect x="676.7" y="197" width="22.4" height="15.0" fill="rgb(231,200,22)" rx="2" ry="2" />
<text  x="679.70" y="207.5" >C..</text>
</g>
<g >
<title>Criterion.Internal.runOne (885 samples, 88.50%)</title><rect x="41.9" y="325" width="1044.3" height="15.0" fill="rgb(228,193,6)" rx="2" ry="2" />
<text  x="44.86" y="335.5" >Criterion.Internal.runOne</text>
</g>
<g >
<title>Statistics.Matrix.Algorithms.qr (5 samples, 0.50%)</title><rect x="21.8" y="197" width="5.9" height="15.0" fill="rgb(237,212,8)" rx="2" ry="2" />
<text  x="24.80" y="207.5" ></text>
</g>
<g >
<title>Pact.Types.Runtime.method (19 samples, 1.90%)</title><rect x="676.7" y="181" width="22.4" height="15.0" fill="rgb(208,188,46)" rx="2" ry="2" />
<text  x="679.70" y="191.5" >P..</text>
</g>
<g >
<title>Control.Monad.Catch.handleAll (1 samples, 0.10%)</title><rect x="667.3" y="229" width="1.1" height="15.0" fill="rgb(209,180,5)" rx="2" ry="2" />
<text  x="670.26" y="239.5" ></text>
</g>
<g >
<title>Text.Parser.Token._styleStart (5 samples, 0.50%)</title><rect x="531.6" y="181" width="5.9" height="15.0" fill="rgb(232,3,14)" rx="2" ry="2" />
<text  x="534.56" y="191.5" ></text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Internal.alterAnnotations (1 samples, 0.10%)</title><rect x="635.4" y="165" width="1.2" height="15.0" fill="rgb(216,110,5)" rx="2" ry="2" />
<text  x="638.40" y="175.5" ></text>
</g>
<g >
<title>Data.ByteArray.Methods.copy (1 samples, 0.10%)</title><rect x="187.0" y="197" width="1.2" height="15.0" fill="rgb(225,55,3)" rx="2" ry="2" />
<text  x="190.00" y="207.5" ></text>
</g>
<g >
<title>Crypto.Hash.hash (5 samples, 0.50%)</title><rect x="187.0" y="261" width="5.9" height="15.0" fill="rgb(214,194,35)" rx="2" ry="2" />
<text  x="190.00" y="271.5" ></text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Internal.vsep (1 samples, 0.10%)</title><rect x="436.0" y="245" width="1.2" height="15.0" fill="rgb(240,225,28)" rx="2" ry="2" />
<text  x="438.98" y="255.5" ></text>
</g>
<g >
<title>Control.Monad.Catch.handleAll (2 samples, 0.20%)</title><rect x="644.8" y="165" width="2.4" height="15.0" fill="rgb(248,22,38)" rx="2" ry="2" />
<text  x="647.84" y="175.5" ></text>
</g>
<g >
<title>Pact.Interpreter.evalTerms (45 samples, 4.50%)</title><rect x="610.6" y="245" width="53.1" height="15.0" fill="rgb(219,155,45)" rx="2" ry="2" />
<text  x="613.62" y="255.5" >Pact...</text>
</g>
<g >
<title>Pact.Types.Orphans.position (54 samples, 5.40%)</title><rect x="858.4" y="197" width="63.7" height="15.0" fill="rgb(246,1,6)" rx="2" ry="2" />
<text  x="861.42" y="207.5" >Pact.Ty..</text>
</g>
<g >
<title>Pact.Types.Parser.style (4 samples, 0.40%)</title><rect x="574.0" y="197" width="4.8" height="15.0" fill="rgb(238,17,49)" rx="2" ry="2" />
<text  x="577.04" y="207.5" ></text>
</g>
<g >
<title>Data.Aeson.Types.Internal.prependFailure (7 samples, 0.70%)</title><rect x="247.2" y="261" width="8.2" height="15.0" fill="rgb(237,8,11)" rx="2" ry="2" />
<text  x="250.18" y="271.5" ></text>
</g>
<g >
<title>Data.ByteArray.Methods.allocAndFreeze (1 samples, 0.10%)</title><rect x="187.0" y="229" width="1.2" height="15.0" fill="rgb(212,11,4)" rx="2" ry="2" />
<text  x="190.00" y="239.5" ></text>
</g>
<g >
<title>Crypto.Hash.hashInit (1 samples, 0.10%)</title><rect x="188.2" y="245" width="1.2" height="15.0" fill="rgb(219,94,29)" rx="2" ry="2" />
<text  x="191.18" y="255.5" ></text>
</g>
<g >
<title>Pact.Types.Runtime.method (1 samples, 0.10%)</title><rect x="667.3" y="213" width="1.1" height="15.0" fill="rgb(222,105,52)" rx="2" ry="2" />
<text  x="670.26" y="223.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.jstring_ (3 samples, 0.30%)</title><rect x="198.8" y="213" width="3.5" height="15.0" fill="rgb(215,197,34)" rx="2" ry="2" />
<text  x="201.80" y="223.5" ></text>
</g>
<g >
<title>Pact.Types.Util.lensyParseJSON (2 samples, 0.20%)</title><rect x="244.8" y="245" width="2.4" height="15.0" fill="rgb(217,202,34)" rx="2" ry="2" />
<text  x="247.82" y="255.5" ></text>
</g>
<g >
<title>Pact.Types.Parser.style (14 samples, 1.40%)</title><rect x="1069.6" y="197" width="16.6" height="15.0" fill="rgb(209,0,0)" rx="2" ry="2" />
<text  x="1072.64" y="207.5" ></text>
</g>
<g >
<title>Pact.Parse.parseExprs (220 samples, 22.00%)</title><rect x="826.6" y="261" width="259.6" height="15.0" fill="rgb(225,30,48)" rx="2" ry="2" />
<text  x="829.56" y="271.5" >Pact.Parse.parseExprs</text>
</g>
<g >
<title>Control.Concurrent.Async.concurrently (23 samples, 2.30%)</title><rect x="13.5" y="245" width="27.2" height="15.0" fill="rgb(240,8,49)" rx="2" ry="2" />
<text  x="16.54" y="255.5" >C..</text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Render.Terminal.Internal.renderStrict (1 samples, 0.10%)</title><rect x="797.1" y="165" width="1.1" height="15.0" fill="rgb(239,108,30)" rx="2" ry="2" />
<text  x="800.06" y="175.5" ></text>
</g>
<g >
<title>Pact.Parse.parseExprs (54 samples, 5.40%)</title><rect x="515.0" y="261" width="63.8" height="15.0" fill="rgb(239,105,1)" rx="2" ry="2" />
<text  x="518.04" y="271.5" >Pact.Pa..</text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Internal.unsafeTextWithoutNewlines (1 samples, 0.10%)</title><rect x="434.8" y="245" width="1.2" height="15.0" fill="rgb(241,86,38)" rx="2" ry="2" />
<text  x="437.80" y="255.5" ></text>
</g>
<g >
<title>Control.Monad.Catch.try (2 samples, 0.20%)</title><rect x="11.2" y="213" width="2.3" height="15.0" fill="rgb(247,1,10)" rx="2" ry="2" />
<text  x="14.18" y="223.5" ></text>
</g>
<g >
<title>Criterion.Analysis.regress (24 samples, 2.40%)</title><rect x="13.5" y="309" width="28.4" height="15.0" fill="rgb(246,220,21)" rx="2" ry="2" />
<text  x="16.54" y="319.5" >Cr..</text>
</g>
<g >
<title>Pact.Eval.enscope (2 samples, 0.20%)</title><rect x="603.5" y="261" width="2.4" height="15.0" fill="rgb(252,159,20)" rx="2" ry="2" />
<text  x="606.54" y="271.5" ></text>
</g>
<g >
<title>Data.Vector.Algorithms.Intro.sort (1 samples, 0.10%)</title><rect x="40.7" y="261" width="1.2" height="15.0" fill="rgb(243,191,1)" rx="2" ry="2" />
<text  x="43.68" y="271.5" ></text>
</g>
<g >
<title>MAIN.MAIN (913 samples, 91.30%)</title><rect x="10.0" y="485" width="1077.3" height="15.0" fill="rgb(216,183,50)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >MAIN.MAIN</text>
</g>
<g >
<title>Data.Attoparsec.Combinator.skipMany1 (15 samples, 1.50%)</title><rect x="519.8" y="229" width="17.7" height="15.0" fill="rgb(219,212,5)" rx="2" ry="2" />
<text  x="522.76" y="239.5" ></text>
</g>
<g >
<title>Pact.Types.Command.parseJSON (1 samples, 0.10%)</title><rect x="251.9" y="213" width="1.2" height="15.0" fill="rgb(246,226,39)" rx="2" ry="2" />
<text  x="254.90" y="223.5" ></text>
</g>
<g >
<title>Pact.Compile.specialFormOrApp (2 samples, 0.20%)</title><rect x="664.9" y="149" width="2.4" height="15.0" fill="rgb(205,175,35)" rx="2" ry="2" />
<text  x="667.90" y="159.5" ></text>
</g>
<g >
<title>Pact.Types.ExpParser.pTokenEpsilon (1 samples, 0.10%)</title><rect x="666.1" y="117" width="1.2" height="15.0" fill="rgb(234,170,22)" rx="2" ry="2" />
<text  x="669.08" y="127.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.object_' (4 samples, 0.40%)</title><rect x="681.4" y="85" width="4.7" height="15.0" fill="rgb(222,223,50)" rx="2" ry="2" />
<text  x="684.42" y="95.5" ></text>
</g>
<g >
<title>Statistics.Matrix.norm (1 samples, 0.10%)</title><rect x="26.5" y="181" width="1.2" height="15.0" fill="rgb(232,207,51)" rx="2" ry="2" />
<text  x="29.52" y="191.5" ></text>
</g>
<g >
<title>Text.Parser.Token._styleLetter (8 samples, 0.80%)</title><rect x="1076.7" y="181" width="9.5" height="15.0" fill="rgb(243,95,4)" rx="2" ry="2" />
<text  x="1079.72" y="191.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.UnescapePure.unescapeText (4 samples, 0.40%)</title><rect x="230.7" y="197" width="4.7" height="15.0" fill="rgb(214,157,23)" rx="2" ry="2" />
<text  x="233.66" y="207.5" ></text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Render.String.renderString (4 samples, 0.40%)</title><rect x="437.2" y="245" width="4.7" height="15.0" fill="rgb(229,121,29)" rx="2" ry="2" />
<text  x="440.16" y="255.5" ></text>
</g>
<g >
<title>Pact.Types.ExpParser.pTokenEpsilon (15 samples, 1.50%)</title><rect x="485.5" y="117" width="17.7" height="15.0" fill="rgb(213,188,30)" rx="2" ry="2" />
<text  x="488.54" y="127.5" ></text>
</g>
<g >
<title>Crypto.Hash.hashFinalize (1 samples, 0.10%)</title><rect x="187.0" y="245" width="1.2" height="15.0" fill="rgb(221,32,18)" rx="2" ry="2" />
<text  x="190.00" y="255.5" ></text>
</g>
<g >
<title>Pact.Native.Internal.defNative (9 samples, 0.90%)</title><rect x="653.1" y="213" width="10.6" height="15.0" fill="rgb(247,166,14)" rx="2" ry="2" />
<text  x="656.10" y="223.5" ></text>
</g>
<g >
<title>Text.Parser.Token._styleLetter (5 samples, 0.50%)</title><rect x="916.2" y="149" width="5.9" height="15.0" fill="rgb(224,14,33)" rx="2" ry="2" />
<text  x="919.24" y="159.5" ></text>
</g>
<g >
<title>Data.Scientific.fromRationalRepetendUnlimited (1 samples, 0.10%)</title><rect x="663.7" y="277" width="1.2" height="15.0" fill="rgb(228,64,21)" rx="2" ry="2" />
<text  x="666.72" y="287.5" ></text>
</g>
<g >
<title>Pact.Types.Orphans.position (85 samples, 8.50%)</title><rect x="985.9" y="229" width="100.3" height="15.0" fill="rgb(248,212,44)" rx="2" ry="2" />
<text  x="988.86" y="239.5" >Pact.Types.O..</text>
</g>
<g >
<title>Text.Parser.Token._styleStart (14 samples, 1.40%)</title><rect x="1069.6" y="213" width="16.6" height="15.0" fill="rgb(244,146,41)" rx="2" ry="2" />
<text  x="1072.64" y="223.5" ></text>
</g>
<g >
<title>Pact.Compile.specialFormOrApp (12 samples, 1.20%)</title><rect x="589.4" y="165" width="14.1" height="15.0" fill="rgb(223,120,35)" rx="2" ry="2" />
<text  x="592.38" y="175.5" ></text>
</g>
<g >
<title>Pact.Native.Db.dbDefs (15 samples, 1.50%)</title><rect x="798.2" y="165" width="17.7" height="15.0" fill="rgb(238,35,30)" rx="2" ry="2" />
<text  x="801.24" y="175.5" ></text>
</g>
<g >
<title>Pact.Types.Term.&gt;&gt;= (3 samples, 0.30%)</title><rect x="820.7" y="149" width="3.5" height="15.0" fill="rgb(230,86,2)" rx="2" ry="2" />
<text  x="823.66" y="159.5" ></text>
</g>
<g >
<title>Pact.Bench.main (2 samples, 0.20%)</title><rect x="11.2" y="229" width="2.3" height="15.0" fill="rgb(247,91,5)" rx="2" ry="2" />
<text  x="14.18" y="239.5" ></text>
</g>
<g >
<title>Pact.Compile.compile (62 samples, 6.20%)</title><rect x="441.9" y="245" width="73.1" height="15.0" fill="rgb(251,137,20)" rx="2" ry="2" />
<text  x="444.88" y="255.5" >Pact.Com..</text>
</g>
<g >
<title>Data.Attoparsec.Combinator.skipMany (4 samples, 0.40%)</title><rect x="538.6" y="197" width="4.8" height="15.0" fill="rgb(205,71,5)" rx="2" ry="2" />
<text  x="541.64" y="207.5" ></text>
</g>
<g >
<title>Data.Aeson.Types.Internal.fieldLabelModifier (2 samples, 0.20%)</title><rect x="244.8" y="261" width="2.4" height="15.0" fill="rgb(216,22,19)" rx="2" ry="2" />
<text  x="247.82" y="271.5" ></text>
</g>
<g >
<title>Pact.Types.RPC.parseJSON (1 samples, 0.10%)</title><rect x="251.9" y="181" width="1.2" height="15.0" fill="rgb(245,207,35)" rx="2" ry="2" />
<text  x="254.90" y="191.5" ></text>
</g>
<g >
<title>Pact.Compile.sexp (2 samples, 0.20%)</title><rect x="664.9" y="165" width="2.4" height="15.0" fill="rgb(246,197,44)" rx="2" ry="2" />
<text  x="667.90" y="175.5" ></text>
</g>
<g >
<title>Text.Megaparsec.Internal.runParsecT (2 samples, 0.20%)</title><rect x="664.9" y="181" width="2.4" height="15.0" fill="rgb(222,137,25)" rx="2" ry="2" />
<text  x="667.90" y="191.5" ></text>
</g>
<g >
<title>Pact.Types.Orphans.position (6 samples, 0.60%)</title><rect x="543.4" y="213" width="7.0" height="15.0" fill="rgb(237,101,47)" rx="2" ry="2" />
<text  x="546.36" y="223.5" ></text>
</g>
<g >
<title>Statistics.Matrix.transpose (5 samples, 0.50%)</title><rect x="28.9" y="197" width="5.9" height="15.0" fill="rgb(208,224,15)" rx="2" ry="2" />
<text  x="31.88" y="207.5" ></text>
</g>
<g >
<title>Pact.Persist.SQLite.decodeBlob (19 samples, 1.90%)</title><rect x="676.7" y="149" width="22.4" height="15.0" fill="rgb(218,92,9)" rx="2" ry="2" />
<text  x="679.70" y="159.5" >P..</text>
</g>
<g >
<title>Pact.Eval.lookupModule (38 samples, 3.80%)</title><rect x="699.1" y="197" width="44.9" height="15.0" fill="rgb(246,205,33)" rx="2" ry="2" />
<text  x="702.12" y="207.5" >Pact..</text>
</g>
<g >
<title>Pact.Bench.benchCompile (209 samples, 20.90%)</title><rect x="268.4" y="261" width="246.6" height="15.0" fill="rgb(224,140,42)" rx="2" ry="2" />
<text  x="271.42" y="271.5" >Pact.Bench.benchCompile</text>
</g>
<g >
<title>Pact.Types.Orphans.position (13 samples, 1.30%)</title><rect x="522.1" y="197" width="15.4" height="15.0" fill="rgb(218,201,44)" rx="2" ry="2" />
<text  x="525.12" y="207.5" ></text>
</g>
<g >
<title>Pact.Types.Term.&gt;&gt;= (1 samples, 0.10%)</title><rect x="651.9" y="213" width="1.2" height="15.0" fill="rgb(236,37,8)" rx="2" ry="2" />
<text  x="654.92" y="223.5" ></text>
</g>
<g >
<title>Pact.Eval.evalUserAppBody (2 samples, 0.20%)</title><rect x="11.2" y="165" width="2.3" height="15.0" fill="rgb(211,83,10)" rx="2" ry="2" />
<text  x="14.18" y="175.5" ></text>
</g>
<g >
<title>Pact.Types.Parser.style (2 samples, 0.20%)</title><rect x="951.6" y="149" width="2.4" height="15.0" fill="rgb(212,75,34)" rx="2" ry="2" />
<text  x="954.64" y="159.5" ></text>
</g>
<g >
<title>Pact.Interpreter.evalTerms (133 samples, 13.30%)</title><rect x="668.4" y="229" width="157.0" height="15.0" fill="rgb(242,206,52)" rx="2" ry="2" />
<text  x="671.44" y="239.5" >Pact.Interpreter.eva..</text>
</g>
<g >
<title>Data.Aeson.Types.FromJSON.genericParseJSON (6 samples, 0.60%)</title><rect x="692.0" y="133" width="7.1" height="15.0" fill="rgb(236,222,30)" rx="2" ry="2" />
<text  x="695.04" y="143.5" ></text>
</g>
<g >
<title>Data.Aeson.Types.Internal.&lt;?&gt; (7 samples, 0.70%)</title><rect x="247.2" y="229" width="8.2" height="15.0" fill="rgb(242,64,36)" rx="2" ry="2" />
<text  x="250.18" y="239.5" ></text>
</g>
<g >
<title>Data.Decimal.roundTo' (7 samples, 0.70%)</title><rect x="654.3" y="181" width="8.2" height="15.0" fill="rgb(247,39,19)" rx="2" ry="2" />
<text  x="657.28" y="191.5" ></text>
</g>
<g >
<title>Control.Monad.Catch.try (136 samples, 13.60%)</title><rect x="664.9" y="261" width="160.5" height="15.0" fill="rgb(242,125,40)" rx="2" ry="2" />
<text  x="667.90" y="271.5" >Control.Monad.Catch...</text>
</g>
<g >
<title>Criterion.Measurement.Types.nfIO (2 samples, 0.20%)</title><rect x="11.2" y="245" width="2.3" height="15.0" fill="rgb(241,106,22)" rx="2" ry="2" />
<text  x="14.18" y="255.5" ></text>
</g>
<g >
<title>Pact.Types.Command.parseJSON (1 samples, 0.10%)</title><rect x="251.9" y="197" width="1.2" height="15.0" fill="rgb(253,30,54)" rx="2" ry="2" />
<text  x="254.90" y="207.5" ></text>
</g>
<g >
<title>Pact.Eval.evalUserAppBody (69 samples, 6.90%)</title><rect x="744.0" y="213" width="81.4" height="15.0" fill="rgb(216,127,16)" rx="2" ry="2" />
<text  x="746.96" y="223.5" >Pact.Eval..</text>
</g>
<g >
<title>Pact.Types.Parser.style (2 samples, 0.20%)</title><rect x="576.4" y="165" width="2.4" height="15.0" fill="rgb(238,190,6)" rx="2" ry="2" />
<text  x="579.40" y="175.5" ></text>
</g>
<g >
<title>Basement.Block.Base.withMutablePtrHint (1 samples, 0.10%)</title><rect x="187.0" y="213" width="1.2" height="15.0" fill="rgb(239,86,52)" rx="2" ry="2" />
<text  x="190.00" y="223.5" ></text>
</g>
<g >
<title>Pact.Native.Db.dbDefs (6 samples, 0.60%)</title><rect x="640.1" y="181" width="7.1" height="15.0" fill="rgb(252,226,19)" rx="2" ry="2" />
<text  x="643.12" y="191.5" ></text>
</g>
<g >
<title>Pact.Types.Runtime.method (1 samples, 0.10%)</title><rect x="634.2" y="165" width="1.2" height="15.0" fill="rgb(250,164,34)" rx="2" ry="2" />
<text  x="637.22" y="175.5" ></text>
</g>
<g >
<title>Pact.Runtime.Capabilities.checkManaged.checkSigs (1 samples, 0.10%)</title><rect x="649.6" y="181" width="1.1" height="15.0" fill="rgb(231,156,10)" rx="2" ry="2" />
<text  x="652.56" y="191.5" ></text>
</g>
<g >
<title>Control.Monad.Catch.finally (2 samples, 0.20%)</title><rect x="11.2" y="341" width="2.3" height="15.0" fill="rgb(218,212,54)" rx="2" ry="2" />
<text  x="14.18" y="351.5" ></text>
</g>
<g >
<title>Pact.Eval.lookupModule (3 samples, 0.30%)</title><rect x="740.4" y="181" width="3.6" height="15.0" fill="rgb(250,43,34)" rx="2" ry="2" />
<text  x="743.42" y="191.5" ></text>
</g>
<g >
<title>Criterion.Analysis.analyseSample (24 samples, 2.40%)</title><rect x="13.5" y="325" width="28.4" height="15.0" fill="rgb(211,58,36)" rx="2" ry="2" />
<text  x="16.54" y="335.5" >Cr..</text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Render.Terminal.Internal.renderStrict (1 samples, 0.10%)</title><rect x="638.9" y="181" width="1.2" height="15.0" fill="rgb(213,11,30)" rx="2" ry="2" />
<text  x="641.94" y="191.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.jstring_ (25 samples, 2.50%)</title><rect x="205.9" y="213" width="29.5" height="15.0" fill="rgb(215,35,7)" rx="2" ry="2" />
<text  x="208.88" y="223.5" >Da..</text>
</g>
<g >
<title>Pact.Compile.checkReserved (1 samples, 0.10%)</title><rect x="602.4" y="149" width="1.1" height="15.0" fill="rgb(213,117,54)" rx="2" ry="2" />
<text  x="605.36" y="159.5" ></text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Internal.viaShow (2 samples, 0.20%)</title><rect x="636.6" y="181" width="2.3" height="15.0" fill="rgb(247,110,3)" rx="2" ry="2" />
<text  x="639.58" y="191.5" ></text>
</g>
<g >
<title>Text.Parser.Token.Style.buildSomeSpaceParser (218 samples, 21.80%)</title><rect x="828.9" y="245" width="257.3" height="15.0" fill="rgb(225,198,33)" rx="2" ry="2" />
<text  x="831.92" y="255.5" >Text.Parser.Token.Style.buildSomeS..</text>
</g>
<g >
<title>Criterion.Measurement.runBenchmark (2 samples, 0.20%)</title><rect x="11.2" y="261" width="2.3" height="15.0" fill="rgb(213,46,46)" rx="2" ry="2" />
<text  x="14.18" y="271.5" ></text>
</g>
<g >
<title>Data.ByteArray.Methods.allocAndFreeze (1 samples, 0.10%)</title><rect x="188.2" y="229" width="1.2" height="15.0" fill="rgb(236,8,40)" rx="2" ry="2" />
<text  x="191.18" y="239.5" ></text>
</g>
<g >
<title>Text.Megaparsec.runParser (61 samples, 6.10%)</title><rect x="443.1" y="229" width="71.9" height="15.0" fill="rgb(228,148,24)" rx="2" ry="2" />
<text  x="446.06" y="239.5" >Text.Meg..</text>
</g>
<g >
<title>Text.Megaparsec.runParser' (2 samples, 0.20%)</title><rect x="664.9" y="213" width="2.4" height="15.0" fill="rgb(250,228,7)" rx="2" ry="2" />
<text  x="667.90" y="223.5" ></text>
</g>
<g >
<title>Pact.Native.Internal.defNative (2 samples, 0.20%)</title><rect x="11.2" y="149" width="2.3" height="15.0" fill="rgb(242,92,39)" rx="2" ry="2" />
<text  x="14.18" y="159.5" ></text>
</g>
<g >
<title>Data.Attoparsec.Combinator.skipMany1 (23 samples, 2.30%)</title><rect x="926.9" y="213" width="27.1" height="15.0" fill="rgb(238,113,47)" rx="2" ry="2" />
<text  x="929.86" y="223.5" >D..</text>
</g>
<g >
<title>Control.Monad.Catch.try (1 samples, 0.10%)</title><rect x="10.0" y="469" width="1.2" height="15.0" fill="rgb(242,23,17)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>Crypto.Hash.hashUpdates (3 samples, 0.30%)</title><rect x="189.4" y="229" width="3.5" height="15.0" fill="rgb(235,116,7)" rx="2" ry="2" />
<text  x="192.36" y="239.5" ></text>
</g>
<g >
<title>Criterion.Monad.withConfig (912 samples, 91.20%)</title><rect x="11.2" y="421" width="1076.1" height="15.0" fill="rgb(228,35,15)" rx="2" ry="2" />
<text  x="14.18" y="431.5" >Criterion.Monad.withConfig</text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.jstring (4 samples, 0.40%)</title><rect x="681.4" y="69" width="4.7" height="15.0" fill="rgb(229,176,50)" rx="2" ry="2" />
<text  x="684.42" y="79.5" ></text>
</g>
<g >
<title>Pact.Types.Runtime.method (3 samples, 0.30%)</title><rect x="812.4" y="133" width="3.5" height="15.0" fill="rgb(224,190,18)" rx="2" ry="2" />
<text  x="815.40" y="143.5" ></text>
</g>
<g >
<title>System.IO.CodePage.withCP65001 (912 samples, 91.20%)</title><rect x="11.2" y="405" width="1076.1" height="15.0" fill="rgb(211,171,14)" rx="2" ry="2" />
<text  x="14.18" y="415.5" >System.IO.CodePage.withCP65001</text>
</g>
<g >
<title>Pact.Types.Orphans.position (4 samples, 0.40%)</title><rect x="538.6" y="181" width="4.8" height="15.0" fill="rgb(225,48,49)" rx="2" ry="2" />
<text  x="541.64" y="191.5" ></text>
</g>
<g >
<title>Data.ByteArray.Methods.convert (1 samples, 0.10%)</title><rect x="255.4" y="277" width="1.2" height="15.0" fill="rgb(227,0,27)" rx="2" ry="2" />
<text  x="258.44" y="287.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.value' (13 samples, 1.30%)</title><rect x="676.7" y="117" width="15.3" height="15.0" fill="rgb(221,29,2)" rx="2" ry="2" />
<text  x="679.70" y="127.5" ></text>
</g>
<g >
<title>Pact.Native.Internal.defNative (59 samples, 5.90%)</title><rect x="754.6" y="181" width="69.6" height="15.0" fill="rgb(209,109,27)" rx="2" ry="2" />
<text  x="757.58" y="191.5" >Pact.Na..</text>
</g>
<g >
<title>Data.HashMap.Base.unsafeInsert (1 samples, 0.10%)</title><rect x="690.9" y="85" width="1.1" height="15.0" fill="rgb(219,4,20)" rx="2" ry="2" />
<text  x="693.86" y="95.5" ></text>
</g>
<g >
<title>Pact.Persist.SQLite.readData' (19 samples, 1.90%)</title><rect x="676.7" y="165" width="22.4" height="15.0" fill="rgb(210,45,1)" rx="2" ry="2" />
<text  x="679.70" y="175.5" >P..</text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Render.Terminal.Internal.renderLazy (1 samples, 0.10%)</title><rect x="797.1" y="149" width="1.1" height="15.0" fill="rgb(243,118,35)" rx="2" ry="2" />
<text  x="800.06" y="159.5" ></text>
</g>
<g >
<title>Text.Parser.Token._styleLetter (2 samples, 0.20%)</title><rect x="576.4" y="181" width="2.4" height="15.0" fill="rgb(241,163,26)" rx="2" ry="2" />
<text  x="579.40" y="191.5" ></text>
</g>
<g >
<title>Statistics.Matrix.unsafeIndex (2 samples, 0.20%)</title><rect x="19.4" y="197" width="2.4" height="15.0" fill="rgb(241,134,9)" rx="2" ry="2" />
<text  x="22.44" y="207.5" ></text>
</g>
<g >
<title>Criterion.Internal.runAndAnalyse (912 samples, 91.20%)</title><rect x="11.2" y="357" width="1076.1" height="15.0" fill="rgb(217,124,22)" rx="2" ry="2" />
<text  x="14.18" y="367.5" >Criterion.Internal.runAndAnalyse</text>
</g>
<g >
<title>Text.Megaparsec.Internal.runParsecT (16 samples, 1.60%)</title><rect x="584.7" y="197" width="18.8" height="15.0" fill="rgb(234,108,53)" rx="2" ry="2" />
<text  x="587.66" y="207.5" ></text>
</g>
<g >
<title>Statistics.Matrix.multiplyV (1 samples, 0.10%)</title><rect x="27.7" y="197" width="1.2" height="15.0" fill="rgb(233,69,31)" rx="2" ry="2" />
<text  x="30.70" y="207.5" ></text>
</g>
<g >
<title>Criterion.Internal.runAndAnalyseOne (2 samples, 0.20%)</title><rect x="11.2" y="293" width="2.3" height="15.0" fill="rgb(229,160,42)" rx="2" ry="2" />
<text  x="14.18" y="303.5" ></text>
</g>
<g >
<title>Data.Aeson.Types.Internal.&lt;?&gt; (2 samples, 0.20%)</title><rect x="695.6" y="69" width="2.3" height="15.0" fill="rgb(237,116,36)" rx="2" ry="2" />
<text  x="698.58" y="79.5" ></text>
</g>
<g >
<title>Data.HashMap.Strict.Base.fromList (3 samples, 0.30%)</title><rect x="235.4" y="245" width="3.5" height="15.0" fill="rgb(246,1,28)" rx="2" ry="2" />
<text  x="238.38" y="255.5" ></text>
</g>
<g >
<title>Statistics.Matrix.transpose (5 samples, 0.50%)</title><rect x="15.9" y="213" width="5.9" height="15.0" fill="rgb(215,27,36)" rx="2" ry="2" />
<text  x="18.90" y="223.5" ></text>
</g>
<g >
<title>Pact.Types.Term.&gt;&gt;= (3 samples, 0.30%)</title><rect x="820.7" y="165" width="3.5" height="15.0" fill="rgb(242,33,50)" rx="2" ry="2" />
<text  x="823.66" y="175.5" ></text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Internal.reAnnotate (1 samples, 0.10%)</title><rect x="635.4" y="181" width="1.2" height="15.0" fill="rgb(209,60,24)" rx="2" ry="2" />
<text  x="638.40" y="191.5" ></text>
</g>
<g >
<title>Text.Parser.Token._styleStart (4 samples, 0.40%)</title><rect x="574.0" y="213" width="4.8" height="15.0" fill="rgb(231,41,24)" rx="2" ry="2" />
<text  x="577.04" y="223.5" ></text>
</g>
<g >
<title>Control.Monad.Catch.handleAll (2 samples, 0.20%)</title><rect x="790.0" y="165" width="2.3" height="15.0" fill="rgb(240,17,9)" rx="2" ry="2" />
<text  x="792.98" y="175.5" ></text>
</g>
<g >
<title>Pact.Interpreter.evalTerms (49 samples, 4.90%)</title><rect x="605.9" y="261" width="57.8" height="15.0" fill="rgb(250,41,23)" rx="2" ry="2" />
<text  x="608.90" y="271.5" >Pact.I..</text>
</g>
<g >
<title>Pact.Types.Orphans.position (24 samples, 2.40%)</title><rect x="550.4" y="229" width="28.4" height="15.0" fill="rgb(215,207,29)" rx="2" ry="2" />
<text  x="553.44" y="239.5" >Pa..</text>
</g>
<g >
<title>Pact.Bench.benchCompile (210 samples, 21.00%)</title><rect x="267.2" y="277" width="247.8" height="15.0" fill="rgb(230,15,53)" rx="2" ry="2" />
<text  x="270.24" y="287.5" >Pact.Bench.benchCompile</text>
</g>
<g >
<title>Pact.Interpreter.evalTerms (2 samples, 0.20%)</title><rect x="11.2" y="197" width="2.3" height="15.0" fill="rgb(235,215,45)" rx="2" ry="2" />
<text  x="14.18" y="207.5" ></text>
</g>
<g >
<title>Pact.Compile.checkReserved (5 samples, 0.50%)</title><rect x="503.2" y="133" width="5.9" height="15.0" fill="rgb(251,15,41)" rx="2" ry="2" />
<text  x="506.24" y="143.5" ></text>
</g>
<g >
<title>Statistics.Regression.bootstrapRegress (24 samples, 2.40%)</title><rect x="13.5" y="293" width="28.4" height="15.0" fill="rgb(253,151,15)" rx="2" ry="2" />
<text  x="16.54" y="303.5" >St..</text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Internal.renderShowS (2 samples, 0.20%)</title><rect x="439.5" y="229" width="2.4" height="15.0" fill="rgb(225,151,31)" rx="2" ry="2" />
<text  x="442.52" y="239.5" ></text>
</g>
<g >
<title>Data.Attoparsec.Combinator.skipMany (55 samples, 5.50%)</title><rect x="857.2" y="213" width="64.9" height="15.0" fill="rgb(219,162,14)" rx="2" ry="2" />
<text  x="860.24" y="223.5" >Data.At..</text>
</g>
<g >
<title>Pact.Eval.enscope (4 samples, 0.40%)</title><rect x="615.3" y="229" width="4.8" height="15.0" fill="rgb(243,218,49)" rx="2" ry="2" />
<text  x="618.34" y="239.5" ></text>
</g>
<g >
<title>Pact.Eval.evalUserAppBody (28 samples, 2.80%)</title><rect x="620.1" y="229" width="33.0" height="15.0" fill="rgb(241,142,49)" rx="2" ry="2" />
<text  x="623.06" y="239.5" >Pa..</text>
</g>
<g >
<title>Data.ByteString.Base16.decode.\.\ (9 samples, 0.90%)</title><rect x="256.6" y="245" width="10.6" height="15.0" fill="rgb(224,213,49)" rx="2" ry="2" />
<text  x="259.62" y="255.5" ></text>
</g>
<g >
<title>Data.Aeson.Types.ToJSON.genericToJSON (1 samples, 0.10%)</title><rect x="1086.2" y="325" width="1.1" height="15.0" fill="rgb(243,145,41)" rx="2" ry="2" />
<text  x="1089.16" y="335.5" ></text>
</g>
<g >
<title>Pact.Types.ExpParser.pTokenEpsilon (5 samples, 0.50%)</title><rect x="509.1" y="165" width="5.9" height="15.0" fill="rgb(224,10,28)" rx="2" ry="2" />
<text  x="512.14" y="175.5" ></text>
</g>
<g >
<title>Text.Megaparsec.runParser' (60 samples, 6.00%)</title><rect x="444.2" y="213" width="70.8" height="15.0" fill="rgb(233,215,4)" rx="2" ry="2" />
<text  x="447.24" y="223.5" >Text.Meg..</text>
</g>
<g >
<title>Statistics.Regression.olsRegress (21 samples, 2.10%)</title><rect x="15.9" y="229" width="24.8" height="15.0" fill="rgb(208,45,5)" rx="2" ry="2" />
<text  x="18.90" y="239.5" >S..</text>
</g>
<g >
<title>Pact.Types.Term.&gt;&gt;= (1 samples, 0.10%)</title><rect x="650.7" y="181" width="1.2" height="15.0" fill="rgb(205,196,3)" rx="2" ry="2" />
<text  x="653.74" y="191.5" ></text>
</g>
<g >
<title>Text.Parser.Token._styleStart (2 samples, 0.20%)</title><rect x="983.5" y="197" width="2.4" height="15.0" fill="rgb(233,178,45)" rx="2" ry="2" />
<text  x="986.50" y="207.5" ></text>
</g>
<g >
<title>Pact.Types.Parser.style (5 samples, 0.50%)</title><rect x="916.2" y="133" width="5.9" height="15.0" fill="rgb(247,22,48)" rx="2" ry="2" />
<text  x="919.24" y="143.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.jstring_ (4 samples, 0.40%)</title><rect x="681.4" y="53" width="4.7" height="15.0" fill="rgb(231,91,36)" rx="2" ry="2" />
<text  x="684.42" y="63.5" ></text>
</g>
<g >
<title>Criterion.Measurement.runBenchmark (885 samples, 88.50%)</title><rect x="41.9" y="309" width="1044.3" height="15.0" fill="rgb(222,112,14)" rx="2" ry="2" />
<text  x="44.86" y="319.5" >Criterion.Measurement.runBenchmark</text>
</g>
<g >
<title>Pact.Types.ExpParser.pTokenEpsilon (1 samples, 0.10%)</title><rect x="502.1" y="101" width="1.1" height="15.0" fill="rgb(214,119,3)" rx="2" ry="2" />
<text  x="505.06" y="111.5" ></text>
</g>
<g >
<title>Pact.Compile.app (28 samples, 2.80%)</title><rect x="470.2" y="133" width="33.0" height="15.0" fill="rgb(206,226,35)" rx="2" ry="2" />
<text  x="473.20" y="143.5" >Pa..</text>
</g>
<g >
<title>Text.Megaparsec.runParser (2 samples, 0.20%)</title><rect x="664.9" y="229" width="2.4" height="15.0" fill="rgb(242,226,53)" rx="2" ry="2" />
<text  x="667.90" y="239.5" ></text>
</g>
<g >
<title>Text.Parser.Token.Style.buildSomeSpaceParser (54 samples, 5.40%)</title><rect x="515.0" y="245" width="63.8" height="15.0" fill="rgb(226,224,30)" rx="2" ry="2" />
<text  x="518.04" y="255.5" >Text.Pa..</text>
</g>
<g >
<title>Control.Monad.Catch.try (69 samples, 6.90%)</title><rect x="582.3" y="277" width="81.4" height="15.0" fill="rgb(235,50,35)" rx="2" ry="2" />
<text  x="585.30" y="287.5" >Control.M..</text>
</g>
<g >
<title>all (1,000 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(250,224,10)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>Crypto.Hash.hashWith (5 samples, 0.50%)</title><rect x="187.0" y="277" width="5.9" height="15.0" fill="rgb(254,123,41)" rx="2" ry="2" />
<text  x="190.00" y="287.5" ></text>
</g>
<g >
<title>Data.HashMap.Strict.Base.fromList (1 samples, 0.10%)</title><rect x="690.9" y="101" width="1.1" height="15.0" fill="rgb(216,139,3)" rx="2" ry="2" />
<text  x="693.86" y="111.5" ></text>
</g>
<g >
<title>Pact.Types.Runtime.method (2 samples, 0.20%)</title><rect x="644.8" y="149" width="2.4" height="15.0" fill="rgb(233,177,41)" rx="2" ry="2" />
<text  x="647.84" y="159.5" ></text>
</g>
<g >
<title>Criterion.Main.runMode (912 samples, 91.20%)</title><rect x="11.2" y="437" width="1076.1" height="15.0" fill="rgb(208,157,40)" rx="2" ry="2" />
<text  x="14.18" y="447.5" >Criterion.Main.runMode</text>
</g>
<g >
<title>Pact.Compile.sexp (14 samples, 1.40%)</title><rect x="587.0" y="181" width="16.5" height="15.0" fill="rgb(207,29,5)" rx="2" ry="2" />
<text  x="590.02" y="191.5" ></text>
</g>
<g >
<title>Pact.Types.Parser.style (1 samples, 0.10%)</title><rect x="536.3" y="133" width="1.2" height="15.0" fill="rgb(214,190,30)" rx="2" ry="2" />
<text  x="539.28" y="143.5" ></text>
</g>
<g >
<title>Data.Aeson.Types.Internal.modifyFailure (7 samples, 0.70%)</title><rect x="247.2" y="245" width="8.2" height="15.0" fill="rgb(239,17,49)" rx="2" ry="2" />
<text  x="250.18" y="255.5" ></text>
</g>
<g >
<title>Pact.Types.Parser.style (5 samples, 0.50%)</title><rect x="531.6" y="165" width="5.9" height="15.0" fill="rgb(220,20,24)" rx="2" ry="2" />
<text  x="534.56" y="175.5" ></text>
</g>
<g >
<title>Pact.Types.Term.&gt;&gt;= (1 samples, 0.10%)</title><rect x="651.9" y="197" width="1.2" height="15.0" fill="rgb(209,174,12)" rx="2" ry="2" />
<text  x="654.92" y="207.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.object_' (4 samples, 0.40%)</title><rect x="686.1" y="101" width="4.8" height="15.0" fill="rgb(226,76,9)" rx="2" ry="2" />
<text  x="689.14" y="111.5" ></text>
</g>
<g >
<title>Control.Monad.Catch.bracket (2 samples, 0.20%)</title><rect x="11.2" y="309" width="2.3" height="15.0" fill="rgb(245,60,38)" rx="2" ry="2" />
<text  x="14.18" y="319.5" ></text>
</g>
<g >
<title>Pact.Compile.compile (2 samples, 0.20%)</title><rect x="664.9" y="245" width="2.4" height="15.0" fill="rgb(211,213,26)" rx="2" ry="2" />
<text  x="667.90" y="255.5" ></text>
</g>
<g >
<title>Pact.Types.Term.termCodec.dec (1 samples, 0.10%)</title><rect x="697.9" y="117" width="1.2" height="15.0" fill="rgb(208,99,1)" rx="2" ry="2" />
<text  x="700.94" y="127.5" ></text>
</g>
<g >
<title>Pact.Bench.main (136 samples, 13.60%)</title><rect x="664.9" y="277" width="160.5" height="15.0" fill="rgb(245,95,28)" rx="2" ry="2" />
<text  x="667.90" y="287.5" >Pact.Bench.main</text>
</g>
<g >
<title>Data.Aeson.encode (1 samples, 0.10%)</title><rect x="1086.2" y="341" width="1.1" height="15.0" fill="rgb(210,225,1)" rx="2" ry="2" />
<text  x="1089.16" y="351.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.jstring (4 samples, 0.40%)</title><rect x="686.1" y="85" width="4.8" height="15.0" fill="rgb(234,60,31)" rx="2" ry="2" />
<text  x="689.14" y="95.5" ></text>
</g>
<g >
<title>Pact.Native.Internal.defNative (9 samples, 0.90%)</title><rect x="653.1" y="229" width="10.6" height="15.0" fill="rgb(209,54,29)" rx="2" ry="2" />
<text  x="656.10" y="239.5" ></text>
</g>
<g >
<title>Text.Megaparsec.runParser' (16 samples, 1.60%)</title><rect x="584.7" y="229" width="18.8" height="15.0" fill="rgb(241,184,26)" rx="2" ry="2" />
<text  x="587.66" y="239.5" ></text>
</g>
<g >
<title>Data.Attoparsec.Combinator.skipMany (13 samples, 1.30%)</title><rect x="522.1" y="213" width="15.4" height="15.0" fill="rgb(213,6,44)" rx="2" ry="2" />
<text  x="525.12" y="223.5" ></text>
</g>
<g >
<title>Pact.Types.Term.&gt;&gt;= (1 samples, 0.10%)</title><rect x="650.7" y="165" width="1.2" height="15.0" fill="rgb(228,140,47)" rx="2" ry="2" />
<text  x="653.74" y="175.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.array_' (4 samples, 0.40%)</title><rect x="225.9" y="197" width="4.8" height="15.0" fill="rgb(221,113,23)" rx="2" ry="2" />
<text  x="228.94" y="207.5" ></text>
</g>
<g >
<title>Data.Scientific.fromFloatDigits (1 samples, 0.10%)</title><rect x="1086.2" y="309" width="1.1" height="15.0" fill="rgb(209,159,1)" rx="2" ry="2" />
<text  x="1089.16" y="319.5" ></text>
</g>
<g >
<title>Criterion.Measurement.Types.nfIO (209 samples, 20.90%)</title><rect x="578.8" y="293" width="246.6" height="15.0" fill="rgb(222,107,17)" rx="2" ry="2" />
<text  x="581.76" y="303.5" >Criterion.Measurement.Types.nfIO</text>
</g>
<g >
<title>System.IO.CodePage.withCodePageOptions (912 samples, 91.20%)</title><rect x="11.2" y="373" width="1076.1" height="15.0" fill="rgb(227,53,0)" rx="2" ry="2" />
<text  x="14.18" y="383.5" >System.IO.CodePage.withCodePageOptions</text>
</g>
<g >
<title>Pact.Native.Internal.defNative (2 samples, 0.20%)</title><rect x="11.2" y="133" width="2.3" height="15.0" fill="rgb(231,187,25)" rx="2" ry="2" />
<text  x="14.18" y="143.5" ></text>
</g>
<g >
<title>Criterion.Measurement.Types.whnf (221 samples, 22.10%)</title><rect x="825.4" y="293" width="260.8" height="15.0" fill="rgb(229,53,22)" rx="2" ry="2" />
<text  x="828.38" y="303.5" >Criterion.Measurement.Types.whnf</text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Internal.reAnnotate (2 samples, 0.20%)</title><rect x="792.3" y="165" width="2.4" height="15.0" fill="rgb(238,228,0)" rx="2" ry="2" />
<text  x="795.34" y="175.5" ></text>
</g>
<g >
<title>Text.Megaparsec.runParserT' (16 samples, 1.60%)</title><rect x="584.7" y="213" width="18.8" height="15.0" fill="rgb(222,50,20)" rx="2" ry="2" />
<text  x="587.66" y="223.5" ></text>
</g>
<g >
<title>Crypto.Ed25519.Pure.valid (97 samples, 9.70%)</title><rect x="72.5" y="277" width="114.5" height="15.0" fill="rgb(233,151,37)" rx="2" ry="2" />
<text  x="75.54" y="287.5" >Crypto.Ed25519..</text>
</g>
<g >
<title>Text.Parser.Token._styleStart (2 samples, 0.20%)</title><rect x="951.6" y="165" width="2.4" height="15.0" fill="rgb(209,115,30)" rx="2" ry="2" />
<text  x="954.64" y="175.5" ></text>
</g>
<g >
<title>Data.ByteString.Base16.decode.dec.go (9 samples, 0.90%)</title><rect x="256.6" y="213" width="10.6" height="15.0" fill="rgb(249,9,13)" rx="2" ry="2" />
<text  x="259.62" y="223.5" ></text>
</g>
<g >
<title>Pact.Types.Orphans.position (23 samples, 2.30%)</title><rect x="926.9" y="181" width="27.1" height="15.0" fill="rgb(218,143,43)" rx="2" ry="2" />
<text  x="929.86" y="191.5" >P..</text>
</g>
<g >
<title>Criterion.Main.defaultMainWith (912 samples, 91.20%)</title><rect x="11.2" y="453" width="1076.1" height="15.0" fill="rgb(225,35,51)" rx="2" ry="2" />
<text  x="14.18" y="463.5" >Criterion.Main.defaultMainWith</text>
</g>
<g >
<title>Control.Monad.Catch.bracket_ (2 samples, 0.20%)</title><rect x="11.2" y="325" width="2.3" height="15.0" fill="rgb(224,11,22)" rx="2" ry="2" />
<text  x="14.18" y="335.5" ></text>
</g>
<g >
<title>Crypto.Hash.hashUpdate (3 samples, 0.30%)</title><rect x="189.4" y="245" width="3.5" height="15.0" fill="rgb(233,162,17)" rx="2" ry="2" />
<text  x="192.36" y="255.5" ></text>
</g>
<g >
<title>Data.Aeson.Types.FromJSON.genericParseJSON (14 samples, 1.40%)</title><rect x="238.9" y="277" width="16.5" height="15.0" fill="rgb(235,159,11)" rx="2" ry="2" />
<text  x="241.92" y="287.5" ></text>
</g>
<g >
<title>Text.Megaparsec.Internal.runParsecT (60 samples, 6.00%)</title><rect x="444.2" y="181" width="70.8" height="15.0" fill="rgb(254,3,29)" rx="2" ry="2" />
<text  x="447.24" y="191.5" >Text.Meg..</text>
</g>
<g >
<title>Pact.Types.Parser.style (8 samples, 0.80%)</title><rect x="1076.7" y="165" width="9.5" height="15.0" fill="rgb(212,187,15)" rx="2" ry="2" />
<text  x="1079.72" y="175.5" ></text>
</g>
<g >
<title>Control.Monad.Catch.handleAll (1 samples, 0.10%)</title><rect x="634.2" y="181" width="1.2" height="15.0" fill="rgb(218,17,52)" rx="2" ry="2" />
<text  x="637.22" y="191.5" ></text>
</g>
<g >
<title>Pact.Native.Internal.defRNative (9 samples, 0.90%)</title><rect x="653.1" y="197" width="10.6" height="15.0" fill="rgb(253,73,45)" rx="2" ry="2" />
<text  x="656.10" y="207.5" ></text>
</g>
<g >
<title>Data.HashMap.Base.unsafeInsert (2 samples, 0.20%)</title><rect x="236.6" y="229" width="2.3" height="15.0" fill="rgb(248,202,13)" rx="2" ry="2" />
<text  x="239.56" y="239.5" ></text>
</g>
<g >
<title>Statistics.Function.sort (1 samples, 0.10%)</title><rect x="40.7" y="277" width="1.2" height="15.0" fill="rgb(240,83,44)" rx="2" ry="2" />
<text  x="43.68" y="287.5" ></text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Internal.unAnnotate (1 samples, 0.10%)</title><rect x="433.6" y="245" width="1.2" height="15.0" fill="rgb(229,21,0)" rx="2" ry="2" />
<text  x="436.62" y="255.5" ></text>
</g>
<g >
<title>Data.Attoparsec.Internal.demandInput (54 samples, 5.40%)</title><rect x="922.1" y="229" width="63.8" height="15.0" fill="rgb(227,85,40)" rx="2" ry="2" />
<text  x="925.14" y="239.5" >Data.A..</text>
</g>
<g >
<title>Criterion.Measurement.Types.nf (455 samples, 45.50%)</title><rect x="41.9" y="293" width="536.9" height="15.0" fill="rgb(244,11,0)" rx="2" ry="2" />
<text  x="44.86" y="303.5" >Criterion.Measurement.Types.nf</text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.object_' (28 samples, 2.80%)</title><rect x="202.3" y="245" width="33.1" height="15.0" fill="rgb(237,14,19)" rx="2" ry="2" />
<text  x="205.34" y="255.5" >Da..</text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.jstring_ (4 samples, 0.40%)</title><rect x="686.1" y="69" width="4.8" height="15.0" fill="rgb(222,158,39)" rx="2" ry="2" />
<text  x="689.14" y="79.5" ></text>
</g>
<g >
<title>Pact.Native.Db.dbDefs (1 samples, 0.10%)</title><rect x="12.4" y="117" width="1.1" height="15.0" fill="rgb(251,21,37)" rx="2" ry="2" />
<text  x="15.36" y="127.5" ></text>
</g>
<g >
<title>Pact.Native.Internal.defRNative.reduced (1 samples, 0.10%)</title><rect x="662.5" y="181" width="1.2" height="15.0" fill="rgb(218,194,12)" rx="2" ry="2" />
<text  x="665.54" y="191.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.array_' (7 samples, 0.70%)</title><rect x="194.1" y="245" width="8.2" height="15.0" fill="rgb(228,12,4)" rx="2" ry="2" />
<text  x="197.08" y="255.5" ></text>
</g>
<g >
<title>Pact.Types.Parser.style (2 samples, 0.20%)</title><rect x="983.5" y="181" width="2.4" height="15.0" fill="rgb(246,185,40)" rx="2" ry="2" />
<text  x="986.50" y="191.5" ></text>
</g>
<g >
<title>Data.Attoparsec.Combinator.skipMany1 (64 samples, 6.40%)</title><rect x="846.6" y="229" width="75.5" height="15.0" fill="rgb(236,204,19)" rx="2" ry="2" />
<text  x="849.62" y="239.5" >Data.Att..</text>
</g>
<g >
<title>Pact.Parse.parseExprs (220 samples, 22.00%)</title><rect x="826.6" y="277" width="259.6" height="15.0" fill="rgb(243,9,9)" rx="2" ry="2" />
<text  x="829.56" y="287.5" >Pact.Parse.parseExprs</text>
</g>
<g >
<title>Statistics.Matrix.unsafeIndex (2 samples, 0.20%)</title><rect x="32.4" y="181" width="2.4" height="15.0" fill="rgb(238,103,50)" rx="2" ry="2" />
<text  x="35.42" y="191.5" ></text>
</g>
<g >
<title>Data.Attoparsec.Combinator.skipMany (23 samples, 2.30%)</title><rect x="926.9" y="197" width="27.1" height="15.0" fill="rgb(228,76,44)" rx="2" ry="2" />
<text  x="929.86" y="207.5" >D..</text>
</g>
<g >
<title>Text.Megaparsec.runParserT' (2 samples, 0.20%)</title><rect x="664.9" y="197" width="2.4" height="15.0" fill="rgb(212,174,6)" rx="2" ry="2" />
<text  x="667.90" y="207.5" ></text>
</g>
<g >
<title>Pact.Native.Db.withRead (4 samples, 0.40%)</title><rect x="815.9" y="165" width="4.8" height="15.0" fill="rgb(220,27,52)" rx="2" ry="2" />
<text  x="818.94" y="175.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.jsonEOF' (13 samples, 1.30%)</title><rect x="676.7" y="133" width="15.3" height="15.0" fill="rgb(247,162,4)" rx="2" ry="2" />
<text  x="679.70" y="143.5" ></text>
</g>
<g >
<title>Criterion.Internal.runOne (2 samples, 0.20%)</title><rect x="11.2" y="277" width="2.3" height="15.0" fill="rgb(246,227,20)" rx="2" ry="2" />
<text  x="14.18" y="287.5" ></text>
</g>
<g >
<title>Pact.Types.ExpParser.pTokenEpsilon (4 samples, 0.40%)</title><rect x="597.6" y="133" width="4.8" height="15.0" fill="rgb(230,219,31)" rx="2" ry="2" />
<text  x="600.64" y="143.5" ></text>
</g>
<g >
<title>Pact.Compile.specialFormOrApp (43 samples, 4.30%)</title><rect x="458.4" y="149" width="50.7" height="15.0" fill="rgb(253,96,15)" rx="2" ry="2" />
<text  x="461.40" y="159.5" >Pact...</text>
</g>
<g >
<title>Data.Aeson.Types.Internal.modifyFailure (4 samples, 0.40%)</title><rect x="693.2" y="101" width="4.7" height="15.0" fill="rgb(253,15,17)" rx="2" ry="2" />
<text  x="696.22" y="111.5" ></text>
</g>
<g >
<title>System.IO.CodePage.withCodePage (912 samples, 91.20%)</title><rect x="11.2" y="389" width="1076.1" height="15.0" fill="rgb(213,69,47)" rx="2" ry="2" />
<text  x="14.18" y="399.5" >System.IO.CodePage.withCodePage</text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Render.Terminal.Internal.renderLazy (1 samples, 0.10%)</title><rect x="638.9" y="165" width="1.2" height="15.0" fill="rgb(239,127,52)" rx="2" ry="2" />
<text  x="641.94" y="175.5" ></text>
</g>
<g >
<title>Control.Concurrent.Async.mapConcurrently (23 samples, 2.30%)</title><rect x="13.5" y="261" width="27.2" height="15.0" fill="rgb(217,125,1)" rx="2" ry="2" />
<text  x="16.54" y="271.5" >C..</text>
</g>
<g >
<title>Data.Attoparsec.Combinator.skipMany1 (1 samples, 0.10%)</title><rect x="827.7" y="245" width="1.2" height="15.0" fill="rgb(244,196,41)" rx="2" ry="2" />
<text  x="830.74" y="255.5" ></text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Internal.viaShow (2 samples, 0.20%)</title><rect x="794.7" y="165" width="2.4" height="15.0" fill="rgb(237,83,49)" rx="2" ry="2" />
<text  x="797.70" y="175.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.jstring (3 samples, 0.30%)</title><rect x="198.8" y="229" width="3.5" height="15.0" fill="rgb(209,214,29)" rx="2" ry="2" />
<text  x="201.80" y="239.5" ></text>
</g>
<g >
<title>Criterion.Main.defaultMain (912 samples, 91.20%)</title><rect x="11.2" y="469" width="1076.1" height="15.0" fill="rgb(233,91,36)" rx="2" ry="2" />
<text  x="14.18" y="479.5" >Criterion.Main.defaultMain</text>
</g>
<g >
<title>Pact.Native.Internal.defNative (25 samples, 2.50%)</title><rect x="622.4" y="213" width="29.5" height="15.0" fill="rgb(235,88,19)" rx="2" ry="2" />
<text  x="625.42" y="223.5" >Pa..</text>
</g>
<g >
<title>Control.Monad.Catch.handleAll (3 samples, 0.30%)</title><rect x="812.4" y="149" width="3.5" height="15.0" fill="rgb(246,13,19)" rx="2" ry="2" />
<text  x="815.40" y="159.5" ></text>
</g>
<g >
<title>Data.Text.Prettyprint.Doc.Internal.alterAnnotations (1 samples, 0.10%)</title><rect x="433.6" y="229" width="1.2" height="15.0" fill="rgb(240,180,17)" rx="2" ry="2" />
<text  x="436.62" y="239.5" ></text>
</g>
<g >
<title>Data.ByteString.Base16.decode.dec (9 samples, 0.90%)</title><rect x="256.6" y="229" width="10.6" height="15.0" fill="rgb(209,200,51)" rx="2" ry="2" />
<text  x="259.62" y="239.5" ></text>
</g>
<g >
<title>Data.Aeson.Parser.UnescapePure.unescapeText (1 samples, 0.10%)</title><rect x="685.0" y="37" width="1.1" height="15.0" fill="rgb(205,54,38)" rx="2" ry="2" />
<text  x="687.96" y="47.5" ></text>
</g>
<g >
<title>Criterion.Internal.runAndAnalyseOne (909 samples, 90.90%)</title><rect x="13.5" y="341" width="1072.7" height="15.0" fill="rgb(208,24,28)" rx="2" ry="2" />
<text  x="16.54" y="351.5" >Criterion.Internal.runAndAnalyseOne</text>
</g>
<g >
<title>Control.Concurrent.Async.forConcurrently (23 samples, 2.30%)</title><rect x="13.5" y="277" width="27.2" height="15.0" fill="rgb(243,45,5)" rx="2" ry="2" />
<text  x="16.54" y="287.5" >C..</text>
</g>
<g >
<title>Pact.Types.Runtime.method (2 samples, 0.20%)</title><rect x="790.0" y="149" width="2.3" height="15.0" fill="rgb(250,6,51)" rx="2" ry="2" />
<text  x="792.98" y="159.5" ></text>
</g>
<g >
<title>Pact.Compile.app (7 samples, 0.70%)</title><rect x="594.1" y="149" width="8.3" height="15.0" fill="rgb(240,225,48)" rx="2" ry="2" />
<text  x="597.10" y="159.5" ></text>
</g>
<g >
<title>Data.Attoparsec.Internal.demandInput (11 samples, 1.10%)</title><rect x="537.5" y="229" width="12.9" height="15.0" fill="rgb(216,20,53)" rx="2" ry="2" />
<text  x="540.46" y="239.5" ></text>
</g>
<g >
<title>Pact.Native.Internal.defNative (59 samples, 5.90%)</title><rect x="754.6" y="197" width="69.6" height="15.0" fill="rgb(211,25,22)" rx="2" ry="2" />
<text  x="757.58" y="207.5" >Pact.Na..</text>
</g>
<g >
<title>Statistics.Regression.rSquare (5 samples, 0.50%)</title><rect x="34.8" y="213" width="5.9" height="15.0" fill="rgb(220,48,46)" rx="2" ry="2" />
<text  x="37.78" y="223.5" ></text>
</g>
<g >
<title>Data.ByteString.Base16.decode.\ (9 samples, 0.90%)</title><rect x="256.6" y="261" width="10.6" height="15.0" fill="rgb(223,138,43)" rx="2" ry="2" />
<text  x="259.62" y="271.5" ></text>
</g>
<g >
<title>Pact.Eval.enscope (61 samples, 6.10%)</title><rect x="672.0" y="213" width="72.0" height="15.0" fill="rgb(208,32,46)" rx="2" ry="2" />
<text  x="674.98" y="223.5" >Pact.Eva..</text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.jsonEOF' (39 samples, 3.90%)</title><rect x="192.9" y="277" width="46.0" height="15.0" fill="rgb(205,3,25)" rx="2" ry="2" />
<text  x="195.90" y="287.5" >Data..</text>
</g>
<g >
<title>Text.Megaparsec.runParserT' (60 samples, 6.00%)</title><rect x="444.2" y="197" width="70.8" height="15.0" fill="rgb(229,142,25)" rx="2" ry="2" />
<text  x="447.24" y="207.5" >Text.Meg..</text>
</g>
<g >
<title>Text.Megaparsec.runParser (16 samples, 1.60%)</title><rect x="584.7" y="245" width="18.8" height="15.0" fill="rgb(228,120,30)" rx="2" ry="2" />
<text  x="587.66" y="255.5" ></text>
</g>
<g >
<title>Pact.Types.Runtime.method (3 samples, 0.30%)</title><rect x="607.1" y="229" width="3.5" height="15.0" fill="rgb(247,181,25)" rx="2" ry="2" />
<text  x="610.08" y="239.5" ></text>
</g>
<g >
<title>Pact.Native.Db.withRead (2 samples, 0.20%)</title><rect x="647.2" y="181" width="2.4" height="15.0" fill="rgb(229,57,26)" rx="2" ry="2" />
<text  x="650.20" y="191.5" ></text>
</g>
<g >
<title>Pact.Compile.compile (16 samples, 1.60%)</title><rect x="584.7" y="261" width="18.8" height="15.0" fill="rgb(231,142,10)" rx="2" ry="2" />
<text  x="587.66" y="271.5" ></text>
</g>
<g >
<title>Data.Attoparsec.Combinator.skipMany1 (4 samples, 0.40%)</title><rect x="538.6" y="213" width="4.8" height="15.0" fill="rgb(250,57,2)" rx="2" ry="2" />
<text  x="541.64" y="223.5" ></text>
</g>
<g >
<title>Data.ByteArray.Methods.copyAndFreeze (3 samples, 0.30%)</title><rect x="189.4" y="213" width="3.5" height="15.0" fill="rgb(227,65,43)" rx="2" ry="2" />
<text  x="192.36" y="223.5" ></text>
</g>
<g >
<title>Text.Parser.Token._styleStart (22 samples, 2.20%)</title><rect x="896.2" y="181" width="25.9" height="15.0" fill="rgb(239,198,46)" rx="2" ry="2" />
<text  x="899.18" y="191.5" >T..</text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.jstring (26 samples, 2.60%)</title><rect x="204.7" y="229" width="30.7" height="15.0" fill="rgb(238,2,48)" rx="2" ry="2" />
<text  x="207.70" y="239.5" >Da..</text>
</g>
<g >
<title>Pact.Compile.sexp (47 samples, 4.70%)</title><rect x="453.7" y="165" width="55.4" height="15.0" fill="rgb(240,184,38)" rx="2" ry="2" />
<text  x="456.68" y="175.5" >Pact...</text>
</g>
<g >
<title>Pact.Types.Term.termCodec.dec (4 samples, 0.40%)</title><rect x="693.2" y="85" width="4.7" height="15.0" fill="rgb(229,189,36)" rx="2" ry="2" />
<text  x="696.22" y="95.5" ></text>
</g>
<g >
<title>Pact.Interpreter.evalTerms (134 samples, 13.40%)</title><rect x="667.3" y="245" width="158.1" height="15.0" fill="rgb(237,225,36)" rx="2" ry="2" />
<text  x="670.26" y="255.5" >Pact.Interpreter.eva..</text>
</g>
<g >
<title>Data.Aeson.Parser.Internal.value' (38 samples, 3.80%)</title><rect x="194.1" y="261" width="44.8" height="15.0" fill="rgb(243,0,44)" rx="2" ry="2" />
<text  x="197.08" y="271.5" >Data..</text>
</g>
<g >
<title>Pact.Types.Parser.style (22 samples, 2.20%)</title><rect x="896.2" y="165" width="25.9" height="15.0" fill="rgb(217,136,36)" rx="2" ry="2" />
<text  x="899.18" y="175.5" >P..</text>
</g>
<g >
<title>Data.Aeson.Types.Internal.prependFailure (4 samples, 0.40%)</title><rect x="693.2" y="117" width="4.7" height="15.0" fill="rgb(219,10,8)" rx="2" ry="2" />
<text  x="696.22" y="127.5" ></text>
</g>
<g >
<title>Pact.Interpreter.evalTerms (2 samples, 0.20%)</title><rect x="11.2" y="181" width="2.3" height="15.0" fill="rgb(254,180,30)" rx="2" ry="2" />
<text  x="14.18" y="191.5" ></text>
</g>
</g>
</svg>
